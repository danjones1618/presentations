{"pdfpcFormat":2,"duration":25,"disableMarkdown":false,"pages":[{"idx":0,"label":1,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"We've all been there: given a text document and we needed to extract value out of it.\n  Maybe this is the advent of code input or something more complex.\n  Luckily, help is at hand to squash our parsing foes."},{"idx":1,"label":2,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":2,"label":3,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"Let's start our example off with parsing a file from advent of code.\n  The first line states the number of coordinates.\n  Each subsequent line is a coordinate.\n  Pretty simple, right?"},{"idx":3,"label":4,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"The quick and dirty way is to just use a lot of `str.split`.\n  This is _fine_... maybe for hacky scripts and advent of code\n  but please don't do this in production.\n\n  With a more complex file structure this will be a pain to debug and extend."},{"idx":4,"label":5,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"Using REGEX is a bit nicer. We get:\n  - checks that our integers are integers wihout int parsing blowing up\n  - validate that we only have two integers on coordinate line\n  - it's a bit easier to read allbeit a bit more verbose"},{"idx":5,"label":6,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"Lark is a Python library which aims to make these issues fly away.\n  It has a few key aims which address the issues we see in the previous excamples.\n\n  One way it achives this is by having clear seperation between the grammar of the file\n  and how to convert that into your internal data structures.\n  Note: this is seperating combining lots of REGEXes and if statements out from building\n  up class instnaces."},{"idx":6,"label":7,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"The first key point we need is to know if the file is valid or not.\n  Let's forget about extracting the data from the file for now but check if we\n  can validate the file's structure"},{"idx":7,"label":8,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"A REGEX can represent any regular language.\n  Behind the scenes, it's representing a DFA.\n  This is simply a state machine.\n  You start from the starting node and if you encounter\n  a character which matches a valid transition you move to the next node.\n  You do this until you reach and stay at the end node (denoted with green outline).\n  Congrats: you validated a language"},{"idx":8,"label":9,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":9,"label":10,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"1. superset of regular language\n  2. start at start node. Then you replace each rule that matches recursivly until hit a terminal rule\n  3. This is what Lark parses"},{"idx":10,"label":11,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"Lark allows us to parse a CFG in Python.\nBut what will we parse?"},{"idx":11,"label":12,"overlay":0,"forcedOverlay":false,"hidden":false,"note":"Plain text accounting is a format for doing double-entry-book keeping\nin, well..., plain text.\n\nFunny story: I actually discovered this and started a journy learning\naccounting one evening because I was procrastentating from packing\nfor a trip.... Turns out accounting doesn't make you fall asleep.\n\nAny ways, it's a simple file format.\nComments are prefixed by a ';'.\n\nThere are two main sections: declerations and transactions."},{"idx":12,"label":12,"overlay":1,"forcedOverlay":true,"hidden":false,"note":"Plain text accounting is a format for doing double-entry-book keeping\nin, well..., plain text.\n\nFunny story: I actually discovered this and started a journy learning\naccounting one evening because I was procrastentating from packing\nfor a trip.... Turns out accounting doesn't make you fall asleep.\n\nAny ways, it's a simple file format.\nComments are prefixed by a ';'.\n\nThere are two main sections: declerations and transactions."},{"idx":13,"label":12,"overlay":2,"forcedOverlay":true,"hidden":false,"note":"Plain text accounting is a format for doing double-entry-book keeping\nin, well..., plain text.\n\nFunny story: I actually discovered this and started a journy learning\naccounting one evening because I was procrastentating from packing\nfor a trip.... Turns out accounting doesn't make you fall asleep.\n\nAny ways, it's a simple file format.\nComments are prefixed by a ';'.\n\nThere are two main sections: declerations and transactions."},{"idx":14,"label":13,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":15,"label":14,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":16,"label":15,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":17,"label":16,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":18,"label":17,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":19,"label":18,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":20,"label":19,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":21,"label":20,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":22,"label":21,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":23,"label":21,"overlay":1,"forcedOverlay":true,"hidden":false},{"idx":24,"label":22,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":25,"label":23,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":26,"label":24,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":27,"label":25,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":28,"label":26,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":29,"label":27,"overlay":0,"forcedOverlay":false,"hidden":false},{"idx":30,"label":28,"overlay":0,"forcedOverlay":false,"hidden":false}]}